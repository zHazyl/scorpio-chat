version: '3.8'

volumes:
  mongo_chat:
    name: chat_messages_service_vol
    driver: local
  rabbitmq:
    name: rabbitmq_vol
    driver: local
  keycloak-and-mysql-volume:

networks:
  scorpio-wu:
    name: scorpio-wu
    driver: bridge

services:
  keycloak:
    image: jboss/keycloak:16.1.0
    command: ["-Djboss.http.port=8180"]
    ports:
      - 8180:8180
    restart: unless-stopped
    environment:
      # User and password for the Administration Console
      KEYCLOAK_USER: admin
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/imports/realm-export.json -Dkeycloak.profile.feature.upload_scripts=enabled
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: mysql
      DB_ADDR: http://keycloakdb.cunbs9tv8nhr.us-east-1.rds.amazonaws.com
      DB_PORT: 3306
      # Same values as the mysql-kc service
      DB_USER: keycloak_user
      DB_PASSWORD: keycloak_password
      DB_DATABASE: keycloakdb
    volumes:
      - ./imports:/opt/jboss/keycloak/imports
#    depends_on:
#      - mysql-kc
    networks:
      - scorpio-wu
  #DATABASES
  messages_db:
    container_name: chat-messages-service-mongo
    image: library/mongo:latest
    environment:
      MONGO_INITDB_DATABASE: chat_messages_service_database
      MONGO_INITDB_ROOT_USERNAME: chat-messages-service-root
      MONGO_INITDB_ROOT_PASSWORD: chat-messages-service-root-pass-123
    ports:
      - 27017:27017
    volumes:
      - mongo_chat:/var/lib/mongo
      - ./init-chat-messages-service-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - scorpio-wu
  mysql-kc:
    image: mysql:8.0.22
    ports:
      - 3366:3366
    restart: unless-stopped
    environment:
      # The user, password and database that Keycloak
      # is going to create and use
      MYSQL_USER: keycloak_user
      MYSQL_PASSWORD: keycloak_password
      MYSQL_DATABASE: keycloakdb
      MYSQL_TCP_PORT: 3366
      # Self-Explanatory
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - keycloak-and-mysql-volume:/var/lib/mysql
    networks:
      - scorpio-wu
  #RABBIT
  rabbitmq:
    container_name: rabbitmq-service
    image: rabbitmq:3-management
    hostname: rabbitmq-service
    command: sh -c "rabbitmq-plugins enable rabbitmq_stomp; rabbitmq-server"
    networks:
      - scorpio-wu
    ports:
      - 5672:5672
      - 15672:15672
      - 61613:61613
    volumes:
      - rabbitmq:/etc/rabbitmq/
      - rabbitmq:/var/lib/rabbitmq/
      - rabbitmq:/var/log/rabbitmq/
      - ./rabbitmq-isolated.conf:/etc/rabbitmq/rabbitmq.config
#  config-server:
#    container_name: config-server
#    image: zhazy/config-server:0.0.1-SNAPSHOT
#    ports:
#      - 8888:8888
#  eureka-server:
#    container_name: eureka-server
#    image: zhazy/eureka-server:1.0.2-SNAPSHOT
#    ports:
#      - 8761:8761
#    restart: always
#    networks:
#      - scorpio-wu
#  cloud-gateway:
#    container_name: cloud-gateway
#    image: zhazy/cloud-gateway:1.0.2-SNAPSHOT
#    ports:
#      - 8080:8080
#    restart: always
#    networks:
#      - scorpio-wu